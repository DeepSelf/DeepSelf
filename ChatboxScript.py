# -*- coding: utf-8 -*-
"""Copie de Chatbox.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OuvVmsyexb62p7LtvOywJUMFK4UjXGtH
"""

import nltk
import random
import string
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np 
import warnings
warnings.filterwarnings('ignore')

"""# Chatbox For IA for tomorrow

# Block One
"""

# Block ONE

block_question1 = {}

block_question1['0'] = ("J’aimerais mieux comprendre si vous vous sentez épuisé.e émotionnellement. Quelle(s) proposition(s) s’applique à votre état actuel ?"
" (Plusieurs choix possibles) \n 1 - Je me sens émotionnellement vidé(e) par mon travail \n 2 - Je me sens à bout à la fin de ma journée de travail "
"\n 3 - Je me sens fatigué lorsque je me lève le matin et que j’ai à affronter une autre journée de travail "
"\n 4 - Travailler avec des gens tout au long de la journée me demande des efforts \n 5 - Je me sens au bout du rouleau")

block_question1['1'] = ("Dites-moi en plus sur votre niveau d’épuisement émotionnel. Quelle(s) phrases correspondent actuellement ? (Plusieurs choix possibles)"
" \n 1 - Je me sens frustré(e) par mon travail \n 2 - Je sens que je travaille “trop dur” dans mon travail \n 3 - Travailler en contact direct avec les gens me stresse trop"
" \n 4 - Je sens que je craque à cause de mon travail")

block_question1['2'] = ("Il reste à savoir si vous expérimentez ce que l’on pourrait appeler une “dépersonnalisation”. Parmi les propositions suivantes, quelles sont celles qui vous correspondent ?"
" (Plusieurs choix possibles) \n 1 - Je sens que je m’occupe de certains patients/clients/élèves de façon impersonnelle comme s’ils étaient des objets "
" \n 2 - Je suis devenu plus insensible aux gens depuis que j’ai ce travail \n 3 - Je crains que ce travail ne m’endurcisse émotionnellement "
"\n 4 - Je ne me soucie pas vraiment de ce qui arrive à mes patients/clients/élèves \n 5 - J’ai l’impression que mes patients/clients/élèves me rendent responsable de certains de leurs problèmes")

block_question1['3'] = ("J’aimerais maintenant en savoir plus long sur votre accomplissement personnel perçu. Parmi les propositions suivantes,"
" quelles sont celles qui s’accordent le plus avec votre expérience personnelle ? (Plusieurs choix possibles) "
"\n 1 - J'ai du mal à m’occuper très efficacement des problèmes de mes clients/collègues "
"\n 2 - J’ai l’impression de ne pas avoir d'influence positive sur les gens à travers mon travail \n 3 - Je me sens rarement plein(e) d'énergie "
"\n 4 - J’ai accompli peu de choses qui en valent la peine dans mon travail")

block_question1['4'] = ("Je voudrais mieux comprendre votre rapport émotionnel aux autres dans votre travail. Quelle(s) phrase(s) vous semblent vraies pour votre cas ? (Plusieurs choix possibles)"
"\n 1 - J'ai du mal à comprendre ce que mes clients/collègues ressentent \n 2 - Je n'arrive pas à créer une atmosphère détendue avec mes clients/collègues"
"\n 3 - Je me sens épuisé(e) lorsque dans mon travail j’ai été proche de mes clients/collègues \n 4 - Dans mon travail, je peine à traiter les problèmes émotionnels avec calme")

block_question1['5'] = ("Sur une échelle allant de 0 à 10, quelle est selon vous l’intensité de ces effets négatifs ? ")

block_question1['6'] = ("Question : Il semblerait que vous ne vous épanouissez pas pleinement au travail. Depuis combien de temps ressentez-vous ces effets négatifs ?")

block_question1['7'] = ("Pour affiner mon diagnostic, j’aurais besoin de quelques précisions. Pour cela, je vous invite à sélectionner les informations qui s’appliquent à votre cas : (Plusieurs choix possibles)"
"\n 1 - Conflit de valeur et travail mal fait \n 2 - Existence d’un événement récent grave (perte d’un être cher…) \n 3 - Peur de l’avenir, de la mort, du changement, de l’entourage (tristesse existentielle)")


# initialisation
block_conv1 = []

def block_one():
  while(True):
    print(block_question1.get(str(0)))

    user_input1 = input()
    block_conv1.append(user_input1)

    if len(block_conv1[0].split()) < 1:
      
      nb_pro = 18

      print(block_question1.get(str(1)))
      user_input = input()
      block_conv1.append(user_input)

      print(block_question1.get(str(2)))
      user_input = input()
      block_conv1.append(user_input)


      print(block_question1.get(str(3)))
      user_input = input()
      block_conv1.append(user_input)


      nb_ans = []
      for i in range(len(block_conv1)):
        nb_ans.extend(block_conv1[i].split())
      
      p = len(nb_ans)/nb_pro

      if p > 1/5:

        print(block_question1.get(str(4)))
        user_input = input()
        block_conv1.append(user_input)

        nb_pro = nb_pro+4

        nb_ans = []
        for i in range(len(block_conv1)):
          nb_ans.extend(block_conv1[i].split())
      
        p = len(nb_ans)/nb_pro

        if p>1/5:
          print(block_question1.get(str(5)))
          user_input = input()
          block_conv1.append(user_input)

          if int(block_conv1[-1]) >= 5:
            print(block_question1.get(str(6)))
            user_input = input()
            block_conv1.append(user_input)

            print(block_question1.get(str(7)))
            user_input = input()
            block_conv1.append(user_input)

          else:
            print(block_question1.get(str(7)))
            user_input = input()
            block_conv1.append(user_input)



        else:
          print(block_question1.get(str(7)))
          user_input = input()
          block_conv1.append(user_input)




      else:
        print(block_question1.get(str(5)))
        user_input = input()
        block_conv1.append(user_input)

        if int(block_conv1[-1]) >= 5:

          print(block_question1.get(str(6)))
          user_input = input()
          block_conv1.append(user_input)
          print(block_question1.get(str(7)))
          user_input = input()
          block_conv1.append(user_input)

        else:
          print(block_question1.get(str(7)))
          user_input = input()
          block_conv1.append(user_input)





    else:
      nb_pro = 14

      print(block_question1.get(str(2)))
      user_input = input()
      block_conv1.append(user_input)

      
      print(block_question1.get(str(3)))
      user_input = input()
      block_conv1.append(user_input)

      nb_ans = []
      for i in range(len(block_conv1)):
        nb_ans.extend(block_conv1[i].split())

      p = len(nb_ans)/nb_pro

      if p > 1/5:

        print(block_question1.get(str(4)))
        user_input = input()
        block_conv1.append(user_input)

        nb_pro = nb_pro+4

        nb_ans = []
        for i in range(len(block_conv1)):
          nb_ans.extend(block_conv1[i].split())
      
        p = len(nb_ans)/nb_pro

        if p>1/5:
          print(block_question1.get(str(5)))
          user_input = input()
          block_conv1.append(user_input)

          if int(block_conv1[-1]) >= 5:
            print(block_question1.get(str(6)))
            user_input = input()
            block_conv1.append(user_input)

            print(block_question1.get(str(7)))
            user_input = input()
            block_conv1.append(user_input)

          else:
            print(block_question1.get(str(7)))
            user_input = input()
            block_conv1.append(user_input)



        else:
          print(block_question1.get(str(7)))
          user_input = input()
          block_conv1.append(user_input)




      else:
        print(block_question1.get(str(5)))
        user_input = input()
        block_conv1.append(user_input)

        if int(block_conv1[-1]) >= 5:
          print(block_question1.get(str(6)))
          user_input = input()
          block_conv1.append(user_input)

          print(block_question1.get(str(7)))
          user_input = input()
          block_conv1.append(user_input)

        else:
          print(block_question1.get(str(7)))
          user_input = input()
          block_conv1.append(user_input)

    print("Cette evaluation est terminé")
    break

"""# Block Two"""

# question
block_question2 = {}

block_question2['0'] = ("Il est temps de déterminer votre niveau de stress au travail. Encore une fois, parmi les propositions suivantes,"
"\n quelles sont celles qui vous correspondent le plus ? (Plusieurs choix possibles) \n 1 - J'ai du mal à me détendre \n 2 - Je suis stressé(e)"
"\n 3 - Je me sens préoccupé(e), tourmenté(e) ou anxieux \n 4 - Je sens peser un grand poids sur mes épaules "
"\n 5 - Je me sens débordé(e) ; j’ai l’impression de manquer de temps")

block_question2['1'] = ("Un stress répété ou chronique dégrade considérablement la forme physique d’un individu, et son niveau d’énergie tend à baisser."
"\n Parmi les choix proposés, veuillez sélectionner ceux qui s’appliquent à votre cas. (Plusieurs choix possibles"
" \n 1 - Je me sens rarement plein(e) d'énergie \n 2 - J’ai des douleurs physiques : maux de tête, maux de dos, mal à la nuque, maux de ventre "
"\n 3 - Je contrôle mal mes réactions, mes émotions, mes humeurs, mes gestes "
"\n 4 - Je ne sais plus où j’en suis, je n’ai pas les idées claires, je manque d’attention et de concentration")

block_question2['2'] = ("Sur une échelle allant de 0 à 10, quelle est l’intensité de votre stress ?")
block_question2['3'] = ("J’ai l’impression que vous êtes parfois stressé au travail. Depuis combien de temps ressentez-vous cela ?")
block_question2['4'] = ("Pour contextualiser vos problèmes éventuels, j’aurais besoin de quelques renseignements supplémentaires. "
"\nPour ce faire, je vous invite à sélectionner, parmi les propositions suivantes, celles qui sont vraies."
"\n (Plusieurs choix possibles)Pour contextualiser vos problèmes éventuels, j’aurais besoin de quelques renseignements supplémentaires."
"\n Pour ce faire, je vous invite à sélectionner, parmi les propositions suivantes, celles qui sont vraies. (Plusieurs choix possibles)"
"\n 1 - Présence ou non d’une situation de crise généralisée \n 2 - Présence ou non de changements organisationnels"
"\n 3 - Incertitude/injonctions contradictoires \n 4 - Présence de conflits ou de relations toxiques \n 5 - Problème de santé grave")



# initialisation
block_conv2 = []
def block_two():
  while(True):
    print(block_question2.get(str(0)))
    user_input1 = input()
    block_conv2.append(user_input1)

    print(block_question2.get(str(1)))
    user_input1 = input()
    block_conv2.append(user_input1)

    print(block_question2.get(str(2)))
    user_input1 = input()
    block_conv2.append(user_input1)

    if int(block_conv2[-1]) >= 5:
      print(block_question2.get(str(3)))
      user_input1 = input()
      block_conv2.append(user_input1)

      print(block_question2.get(str(4)))
      user_input1 = input()
      block_conv2.append(user_input1)


    else:
      print(block_question2.get(str(4)))
      user_input1 = input()
      block_conv2.append(user_input1)
    
    print("Cette evaluation est terminée")
    break

"""# Block Three"""

block_question3 = {}

block_question3['0'] = ("L’humeur au quotidien est un indicateur fiable de l’anxiété d’un individu. "
"\nParmi les propositions suivantes, quelles sont celles qui vous renvoient à votre expérience personnelle ? (Plusieurs choix possibles)"
"\n 1 - Je ne prends plus plaisir aux mêmes choses qu’autrefois \n 2 - Je ris rarement et suis souvent pessimiste"
"\n 3 - Je suis régulièrement de mauvaise humeur \n 4 - Je n'arrive pas à me réjouire d’avance à l’idée de faire certaines choses")

block_question3['1'] = ("Parmi les propositions suivantes, sélectionnez celles qui vous correspondent le plus. (Plusieurs choix possibles)"
"\n 1 - Je me sens tendu ou énervé \n 2 - J’ai l’impression de fonctionner au ralenti \n 3 - J'ai du mal à me sentir décontracté lorsque je reste assis à ne rien faire"
"\n 4 - J’ai la bougeotte et n’arrive pas à tenir en place \n 5 - Je n'arrive pas à prendre plaisir à un bon livre ou à une bonne émission de radio ou de télévision")

block_question3['2'] = ("Quelles sont les réponses émotionnelles qui vous caractérisent le plus en ce moment ? (Plusieurs choix possibles)"
"\n 1 - Je me fais du souci \n 2 - J’ai une sensation de peur comme si quelque chose de terrible allait m’arriver"
"\n 3 - J’éprouve des sensations de peur et j’ai l’estomac noué \n 4 - J’éprouve des sensations soudaines de panique \n 5 - Je ne m’intéresse plus à mon apparence")

block_question3['3'] = ("Sur une échelle allant de 0 à 10, quelle est l’intensité de votre anxiété ?")

block_question3['4'] = ("Il semblerait que vous soyez parfois un peu anxieux au travail. Depuis combien de temps ressentez-vous cela ?")

block_question3['5'] = ("Maintenant, il me reste à vous demander de préciser les causes potentielles de vos problèmes."
"\n Parmi les propositions suivantes, sélectionnez celles qui vous caractérisent le plus. (Plusieurs choix possibles)"
"\n 1 - Anxiété de performance \n 2 - Anxiété sociale \n 3 - Existence d’un événement récent grave (perte d’un être cher…) \n 4 - Peur de l’avenir, de la mort, du changement, de l’entourage")


# initialisation
block_conv3 = []
i = 0

def block_three():
  while(True):
    print(block_question3.get(str(0)))
    user_input1 = input()
    block_conv3.append(user_input1)

    if block_conv3[0] == "":
      print(block_question3.get(str(2)))
      user_input1 = input()
      block_conv3.append(user_input1)

      print(block_question3.get(str(2)))
      user_input1 = input()
      block_conv3.append(user_input1)

      p = 9

      nb_ans = []
      for i in range(len(block_conv3)):
        nb_ans.extend(block_conv3[i].split())

      if nb_ans/p >= 1/5:
        print(block_question3.get(str(3)))
        user_input1 = input()
        block_conv3.append(user_input1)

        if int(block_conv3[-1]) >= 5:
          print(block_question3.get(str(4)))
          user_input1 = input()
          block_conv3.append(user_input1)

          print(block_question3.get(str(5)))
          user_input1 = input()
          block_conv3.append(user_input1)

        else:
          print(block_question3.get(str(5)))
          user_input1 = input()
          block_conv3.append(user_input1)

      else:
        print(block_question3.get(str(5)))
        user_input1 = input()
        block_conv3.append(user_input1)





    else:
      print(block_question3.get(str(1)))
      user_input1 = input()
      block_conv3.append(user_input1)

      if len(block_conv3[-1].split()) > 1 :
        print(block_question3.get(str(2)))
        user_input1 = input()
        block_conv3.append(user_input1)
        
        p = 14

        nb_ans = []
        for i in range(len(block_conv3)):
          nb_ans.extend(block_conv3[i].split())

        if nb_ans/p >= 1/5:
          print(block_question3.get(str(3)))
          user_input1 = input()
          block_conv3.append(user_input1)

          if int(block_conv3[-1]) >= 5:
            print(block_question3.get(str(4)))
            user_input1 = input()
            block_conv3.append(user_input1)

            print(block_question3.get(str(5)))
            user_input1 = input()
            block_conv3.append(user_input1)

          else:
            print(block_question3.get(str(5)))
            user_input1 = input()
            block_conv3.append(user_input1)

        else:
          print(block_question3.get(str(5)))
          user_input1 = input()
          block_conv3.append(user_input1)





      else:
        print(block_question3.get(str(3)))
        user_input1 = input()
        block_conv3.append(user_input1)

        if int(block_conv3[-1]) >= 5:
            print(block_question3.get(str(4)))
            user_input1 = input()
            block_conv3.append(user_input1)

            print(block_question3.get(str(5)))
            user_input1 = input()
            block_conv3.append(user_input1)

        else:
          print(block_question3.get(str(5)))
          user_input1 = input()
          block_conv3.append(user_input1)


    print("Fin de cette evaluation")

    break

"""# Block Four"""

block_question4 = {}

block_question4['0'] = ("Si vous deviez caractériser l’état affectif dans lequel vous vous trouvez au quotidien, "
"\n choisiriez-vous une ou plusieurs de ces propositions ? (Plusieurs choix possibles)"
"\n 1 - Tristesse apparente \n 2 - Tristesse exprimée \n 3 - Tension intérieure \n 4 - Incapacité à ressentir \n 5 - Lassitude")

block_question4['1'] = ("Un état de tristesse profond et durable peut avoir une incidence sur certaines fonctions vitales."
"\n Parmi les effets secondaires négatifs suivants, quels sont ceux qui vous correspondent le plus ? (Plusieurs choix possibles)"
"\n 1 - Réduction du temps de sommeil \n 2 - Réduction de l’appétit \n 3 - Difficultés de concentration \n 4 - Pensées pessimistes \n 5 - Idées de suicide")

block_question4['2'] = ("Sur une échelle allant de 0 à 10, quelle est l’intensité de vos sentiments négatifs ces derniers temps ?")

block_question4['3'] = ("Vous pourriez n’être parfois pas au mieux de votre forme ces derniers temps. Depuis combien de temps ressentez-vous ces effets ?")

block_question4['4'] = ("Mon diagnostic se précise ! Pour déterminer les causes possibles de vos problèmes,"
"\n j’aurais besoin de quelques précisions. Vous reconnaissez-vous dans les propositions suivantes ? (Plusieurs choix possibles)"
"\n 1 - Peur de l’avenir, de la mort, du changement, de l’entourage (angoisse existentielle) \n 2 - Sentiment d’isolement")

# initialisation
block_conv4 = []
i = 0

def block_four():
  while(True):
    # Introduction question
    print(block_question4.get(str(0)))
    user_input1 = input()
    block_conv4.append(user_input1)

    print(block_question4.get(str(1)))
    user_input1 = input()
    block_conv4.append(user_input1)


    p = 10
    nb_ans = []
    for i in range(len(block_conv4)):
      nb_ans.extend(block_conv4[i].split())
      
    if len(nb_ans)/p > 1/5 :
      print(block_question4.get(str(2)))
      user_input1 = input()
      block_conv4.append(user_input1)

      if int(block_conv4[-1]) >= 5 :
        print(block_question4.get(str(3)))
        user_input1 = input()
        block_conv4.append(user_input1)

        print(block_question4.get(str(2)))
        user_input1 = input()
        block_conv4.append(user_input1)

      else:
        print(block_question4.get(str(4)))
        user_input1 = input()
        block_conv4.append(user_input1)



    else:
      print(block_question4.get(str(4)))
      user_input1 = input()
      block_conv4.append(user_input1)

    Print("Cette Evaluation est terminée")
    break

"""# Head of the chatbox

depend on previous excecution
"""

# Main chatbox

# Instruction
print('For better analysis separate your answer by a space')

# Sequential question
question = [ "Parmi les propositions suivantes, quelles sont celles qui vous correspondent ? (Plusieurs choix possibles)" 
      "\n 1 - Je me sens épuisé(e) émotionnellement par mon travail \n 2 - Je suis régulièrement stressé(e) "
      "\n 3 - Je suis rarement de bonne humeur \n 4 - Je suis souvent triste",

        "Parmi les propositions suivantes, quelles sont celles qui vous correspondent ? (Plusieurs choix possibles) "
        "\n 1 - Je me sens frustré(e) par mon travail \n 2 - J’ai du mal à me sentir plein(e) d’énergie "
        " \n 3 - J’éprouve des sensations de peur et j’ai l’estomac noué \n 4 - Je suis fréquemment gagné(e) par la lassitude" ,

        "Parmi les propositions suivantes, quelles sont celles qui vous correspondent ? (Plusieurs choix possibles) "
        "\n 1 - J’ai l’impression de ne pas avoir d’influence positive sur les gens à travers mon travail \n 2 - Je me sens débordé(e) "
        "\n 3 - Je me sens tendu(e) ou énervé(e) \n 4 - J’ai souvent des pensées pessimistes" 
             ]







#breaking
exist_list = ['exit', 'bye', 'see you later', 'quit', 'break']

#initialisation
groupe = [1,2,3,4,5]
conversation = []
i = 0
block = ["1", "2", "3", "4"]


#chatbox
while(True):
  print(question[0])
  user_input = input()
  conversation.append(user_input)

  print(question[1])
  user_input = input()
  conversation.append(user_input)

  print(question[2])
  user_input = input()
  conversation.append(user_input)



  data = []
  for i in range(len(conversation)):
    data.extend(conversation[i].split())

  selected_block = [i for i in block if i in data]

  for i in selected_block:
    if i =="1":
      block_one()
    elif i == "2":
      block_two()
    elif i == "3":
      block_three()
    elif i == "4":
      block_four()
    else:
      pass
  
  print("Fin de votre evaluation")
  break
